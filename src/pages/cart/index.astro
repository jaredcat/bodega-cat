---
import Navbar from '@components/Navbar';
import { getSiteConfig } from '@config/site';
import Layout from '@layouts/Layout.astro';
---

<Layout title="Shopping Cart">
  <Navbar siteConfig={getSiteConfig()} client:load />

  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <h1 class="text-3xl font-bold mb-8">Shopping Cart</h1>

    <div id="cart-container">
      <!-- Cart items will be populated by JavaScript -->
      <div class="text-center py-12">
        <p class="text-muted text-lg">Loading cart...</p>
      </div>
    </div>
  </div>
</Layout>

<script>
  function displayCart() {
    const cartContainer = document.getElementById('cart-container');
    if (!cartContainer) return;

    const cart = JSON.parse(localStorage.getItem('cart') ?? '[]');

    if (cart.length === 0) {
      cartContainer.innerHTML = `
        <div class="text-center py-12">
          <p class="text-muted text-lg mb-4">Your cart is empty</p>
          <a href="/shop" class="btn btn-primary">Continue Shopping</a>
        </div>
      `;
      return;
    }

    let total = 0;
    const cartHTML = cart
      .map((item: any, index: number) => {
        const itemTotal = item.price * item.quantity;
        total += itemTotal;

        return `
        <div class="flex items-center space-x-4 p-4 border-b">
          <div class="flex-1">
            <h3 class="font-semibold">${item.productId}</h3>
            <p class="text-muted text-sm">Quantity: ${item.quantity}</p>
            ${
              Object.keys(item.selectedVariations).length > 0
                ? `<p class="text-muted text-sm">Options: ${Object.entries(
                    item.selectedVariations,
                  )
                    .map(([key, value]) => `${key}: ${value}`)
                    .join(', ')}</p>`
                : ''
            }
          </div>
          <div class="text-right">
            <p class="font-semibold">$${(itemTotal / 100).toFixed(2)}</p>
            <button onclick="removeFromCart(${index})" class="text-red-500 text-sm hover:text-red-700">
              Remove
            </button>
          </div>
        </div>
      `;
      })
      .join('');

    cartContainer.innerHTML = `
      <div class="bg-surface rounded-lg overflow-hidden">
        ${cartHTML}
        <div class="p-4 bg-gray-50">
          <div class="flex justify-between items-center">
            <span class="text-lg font-semibold">Total:</span>
            <span class="text-2xl font-bold text-primary">$${(total / 100).toFixed(2)}</span>
          </div>
          <div class="mt-4 flex space-x-4">
            <a href="/shop" class="btn btn-outline flex-1">Continue Shopping</a>
            <button onclick="proceedToCheckout()" class="btn btn-primary flex-1">
              Proceed to Checkout
            </button>
          </div>
        </div>
      </div>
    `;
  }

  function removeFromCart(index: number) {
    const cart = JSON.parse(localStorage.getItem('cart') || '[]');
    cart.splice(index, 1);
    localStorage.setItem('cart', JSON.stringify(cart));
    displayCart();
  }

  function proceedToCheckout() {
    const cart = JSON.parse(localStorage.getItem('cart') || '[]');
    if (cart.length === 0) {
      alert('Your cart is empty');
      return;
    }

    // Redirect to checkout page
    window.location.href = '/cart/checkout';
  }

  // Initialize cart display
  displayCart();
</script>
