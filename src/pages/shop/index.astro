---
import Layout from '../../layouts/Layout.astro';
import Navbar from '../../components/Navbar';
import { getSiteConfig } from '../../config/site';
import { getProducts } from '../../lib/stripe';

const siteConfig = getSiteConfig();
const products = await getProducts();

// Get unique categories and tags for filtering
const categories = [
  ...new Set(products.map((p) => p.metadata.category).filter(Boolean)),
];
const tags = [...new Set(products.flatMap((p) => p.metadata.tags))];
---

<Layout title="Shop">
  <Navbar siteConfig={siteConfig} client:load />

  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Header -->
    <div class="mb-8">
      <h1 class="text-3xl font-bold mb-4">Shop</h1>
      <p class="text-muted">Discover our collection of amazing products</p>
    </div>

    <!-- Filters and Products Grid -->
    <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
      <!-- Filters Sidebar -->
      <div class="lg:col-span-1">
        <div class="card sticky top-8">
          <h3 class="text-lg font-semibold mb-4">Filters</h3>

          <!-- Search -->
          <div class="mb-6">
            <label class="block text-sm font-medium mb-2">
              Search

            <input
              type="text"
              id="search"
              placeholder="Search products..."
              class="input"
            />
                         </label>
          </div>

          <!-- Categories -->
          {
            categories.length > 0 && (
              <div class="mb-6">
                <h4 class="font-medium mb-3">Categories</h4>
                <div class="space-y-2">
                  {categories.map((category) => (
                    <label class="flex items-center">
                      <input type="checkbox" class="mr-2" />
                      <span class="text-sm">{category}</span>
                    </label>
                  ))}
                </div>
              </div>
            )
          }

          <!-- Tags -->
          {
            tags.length > 0 && (
              <div class="mb-6">
                <h4 class="font-medium mb-3">Tags</h4>
                <div class="space-y-2">
                  {tags.map((tag) => (
                    <label class="flex items-center">
                      <input type="checkbox" class="mr-2" />
                      <span class="text-sm">{tag}</span>
                    </label>
                  ))}
                </div>
              </div>
            )
          }

          <!-- Price Range -->
          <div class="mb-6">
            <h4 class="font-medium mb-3">Price Range</h4>
            <div class="space-y-2">
              <input type="range" min="0" max="1000" class="w-full" />
              <div class="flex justify-between text-sm text-muted">
                <span>$0</span>
                <span>$1000</span>
              </div>
            </div>
          </div>

          <!-- Clear Filters -->
          <button class="btn btn-outline w-full"> Clear Filters </button>
        </div>
      </div>

      <!-- Products Grid -->
      <div class="lg:col-span-3">
        {
          products.length > 0 ? (
            <div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6">
              {products.map((product) => (
                <div class="card hover:shadow-lg transition-shadow">
                  {product.images.length > 0 && (
                    <img
                      src={product.images[0]}
                      alt={product.name}
                      class="w-full h-48 object-cover rounded-t-lg mb-4"
                    />
                  )}
                  <h3 class="text-lg font-semibold mb-2">{product.name}</h3>
                  <p class="text-muted mb-4 line-clamp-2">
                    {product.description}
                  </p>

                  {/* Tags */}
                  {product.metadata.tags.length > 0 && (
                    <div class="flex flex-wrap gap-1 mb-4">
                      {product.metadata.tags.slice(0, 3).map((tag) => (
                        <span class="px-2 py-1 bg-primary/10 text-primary text-xs rounded">
                          {tag}
                        </span>
                      ))}
                    </div>
                  )}

                  <div class="flex justify-between items-center">
                    <span class="text-xl font-bold text-primary">
                      ${(product.basePrice / 100).toFixed(2)}
                    </span>
                    <a href={`/shop/${product.slug}`} class="btn btn-primary">
                      View Details
                    </a>
                  </div>
                </div>
              ))}
            </div>
          ) : (
            <div class="text-center py-12">
              <p class="text-muted text-lg">No products found.</p>
            </div>
          )
        }
      </div>
    </div>
  </div>
</Layout>

<script>
  // Client-side filtering logic will go here
  // This will be enhanced with React components for better interactivity
</script>
