---
export const prerender = true;

import { Image } from 'astro:assets';
import Layout from '@layouts/Layout.astro';
import Navbar from '@components/Navbar';
import ProductVariations from '@components/ProductVariations';
import { getSiteConfig } from '@config/site';
import { getProducts } from '@lib/stripe';
import type { Product } from '../../types/product';

export async function getStaticPaths() {
  try {
    const products = await getProducts();

    return products.map((product) => ({
      params: { slug: product.slug },
      props: { product },
    }));
  } catch (error) {
    console.error('Error generating static paths for products:', error);
    return [];
  }
}

interface Props {
  product: Product;
}

const { product } = Astro.props;
const siteConfig = getSiteConfig();

const productType = siteConfig.productTypes.find(
  (pt) => pt.id === product.metadata.productTypeId,
);
---

<Layout title={product.name} description={product.description}>
  <Navbar siteConfig={siteConfig} client:load />
  <div class="mx-auto max-w-7xl px-4 py-8 sm:px-6 lg:px-8">
    <div class="grid grid-cols-1 gap-8 lg:grid-cols-2">
      <!-- Product Images -->
      <div class="space-y-4">
        {
          product.images.length > 0 ? (
            <div class="aspect-w-1 aspect-h-1 w-full">
              <Image
                src={product.images[0]}
                alt={product.name}
                width={600}
                height={600}
                loading="eager"
                class="h-full w-full rounded-lg object-cover"
              />
            </div>
          ) : (
            <div class="aspect-w-1 aspect-h-1 flex w-full items-center justify-center rounded-lg bg-gray-200">
              <span class="text-gray-400">No image available</span>
            </div>
          )
        }

        {
          product.images.length > 1 && (
            <div class="grid grid-cols-4 gap-2">
              {product.images.slice(1).map((image, index) => (
                <Image
                  src={image}
                  alt={`${product.name} - ${String(index + 2)}`}
                  width={150}
                  height={96}
                  class="h-24 w-full cursor-pointer rounded-lg object-cover hover:opacity-75"
                />
              ))}
            </div>
          )
        }
      </div>

      <!-- Product Details -->
      <div class="space-y-6">
        <div>
          <h1 class="text-3xl font-bold text-gray-900">{product.name}</h1>
          <p class="mt-2 text-lg text-gray-600">{product.description}</p>
        </div>

        <!-- Price -->
        <div class="text-primary text-2xl font-bold">
          ${(product.basePrice / 100).toFixed(2)}
        </div>

        <!-- Product Type Info -->
        {
          productType && (
            <div class="rounded-lg bg-gray-50 p-4">
              <h3 class="mb-2 font-medium text-gray-900">{productType.name}</h3>
              {productType.description && (
                <p class="text-sm text-gray-600">{productType.description}</p>
              )}
            </div>
          )
        }

        <!-- Product Variations -->
        {
          product.variationDefinitions.length > 0 && (
            <ProductVariations product={product} client:load />
          )
        }

        <!-- Add to Cart Section -->
        <div class="border-t pt-6">
          <div class="mb-4 flex items-center space-x-4">
            <label for="quantity" class="text-sm font-medium text-gray-700">
              Quantity:
            </label>
            <div class="flex items-center rounded-md border">
              <button
                type="button"
                onclick="updateQuantity(-1)"
                class="px-3 py-1 text-gray-600 hover:text-gray-800">
                -
              </button>
              <input
                type="number"
                id="quantity"
                value="1"
                min="1"
                class="w-16 border-0 text-center focus:ring-0"
              />
              <button
                type="button"
                onclick="updateQuantity(1)"
                class="px-3 py-1 text-gray-600 hover:text-gray-800">
                +
              </button>
            </div>
          </div>

          <button onclick="addToCart()" class="btn btn-primary w-full">
            Add to Cart
          </button>
        </div>

        <!-- Product Metadata -->
        <div class="space-y-2 border-t pt-6">
          {
            product.metadata.sku && (
              <p class="text-sm text-gray-600">
                <span class="font-medium">SKU:</span> {product.metadata.sku}
              </p>
            )
          }
          {
            product.metadata.brand && (
              <p class="text-sm text-gray-600">
                <span class="font-medium">Brand:</span> {product.metadata.brand}
              </p>
            )
          }
          {
            product.metadata.category && (
              <p class="text-sm text-gray-600">
                <span class="font-medium">Category:</span>{' '}
                {product.metadata.category}
              </p>
            )
          }
          {
            product.metadata.tags.length > 0 && (
              <div class="flex flex-wrap gap-2">
                <span class="text-sm font-medium text-gray-600">Tags:</span>
                {product.metadata.tags.map((tag) => (
                  <span class="inline-flex items-center rounded-full bg-gray-100 px-2 py-1 text-xs font-medium text-gray-800">
                    {tag}
                  </span>
                ))}
              </div>
            )
          }
        </div>
      </div>
    </div>
  </div>

  <script>
    // This will be handled by the ProductVariations component
    // The cart functionality is now managed by the cart store
  </script>
</Layout>
